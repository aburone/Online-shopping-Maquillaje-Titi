-# coding: UTF-8
h2 Armando de #{product.p_name}

- if missing_parts.empty?
  p Todos los items necesarios ya fueron cargados
- else
  fieldset.action_container
    h2.action Proxima parte a agregar
    / Read new label
    p Lee la etiqueta del proximo item&nbsp;

    form action=url("/production/#{order.type.downcase}/#{order.o_id}/#{product.p_id}") method="post"
      == Rack::Csrf.tag(env)
      label.aligner_2 for="i_id" = t.sales.inventory_review.scan_label
      input.aligned autofocus="autofocus" required="required" type="text" name="i_id" id="i_id" size=15 maxlength=15 value="" placeholder="#{t.label.read_placeholder}"
      input type="submit" value="Aceptar"

  h2 Partes por agregar
  == slim :products_list, locals: {price_col: false, price_pro_col: false, full_rows: false, can_edit: false, order: order, products: missing_parts, can_filter: false}
  / - @materials = materials
  / == slim :materials_list, locals: {stock_col: false, full_rows: false, can_edit: false, order: order, can_filter: false}



/ Current items in order and removal option
h2 Partes agregadas a esta orden
== slim :items_list, locals: {items: added_parts, can_filter: false, price_col: false, price_pro_col: false}
/ Remove single item
- unless added_parts.empty?
  a href="/admin/production/#{order.type.downcase}/#{order.o_id}/item/remove" Remover una parte de la orden

/ / Current bulks in order and removal option
/ h2 Materiales agregados a esta orden
/ == slim :bulks_list, locals: {bulks: needed_materials, can_filter: false}
/ / Remove single bulk
/ - unless bulks.empty?
/   a href="/admin/production/#{order.type.downcase}/#{order.o_id}/bulk/remove" Remover un material de la orden


- unless added_parts.empty?
  form.v_island_1#finish_packaging action=url("/production/#{order.type.downcase}/#{order.o_id}/finish") method="post"
    == Rack::Csrf.tag(env)
    input type="hidden" name="o_id" value="#{order.o_id}"
    input type="submit" value="#{t.actions.finish}"

form.v_island_1#finish_packaging action=url("/production/#{order.type.downcase}/#{order.o_id}/cancel") method="post"
  == Rack::Csrf.tag(env)
  input type="hidden" name="o_id" value="#{order.o_id}"
  input.ajax_confirm data-confirm_message="#{t.order.sure_to_cancel_load_order}" type="submit" value="#{t.actions.cancel_order}"
