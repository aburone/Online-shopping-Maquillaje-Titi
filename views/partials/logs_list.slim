- if logs.empty?
  p = t.logs.empty
- else
  - can_filter = true if can_filter.nil?
  - focus = true if focus.nil?
  == slim :table_global_filter, locals: {can_filter: can_filter, focus: focus} if can_filter
  - tablesorter_class = can_filter ? "tablesorter" : "tablesorter_nofilter"
  - caption = can_filter ? t.tablesorter.default_caption : caption unless !caption.nil?
  table class="items #{tablesorter_class}"
    caption #{caption}
    thead
      tr
        th = t.event.fields.at
        th = t.event.fields.msg
        th = t.event.fields.u_id
        th = t.event.fields.l_id
        th = t.event.fields.lvl
        th = t.event.fields.b_id
        th = t.event.fields.m_id
        th = t.event.fields.i_id_l_id
        th = t.event.fields.o_id
        th = t.event.fields.p_id
    tfoot
      tr
        td colspan="8" = t.logs.count(logs.count)
    tbody
      - logs.each do |event|
        tr.event.item
          td.ajax_filter_by_me = Utils::local_datetime_format event[:at]
          td.ajax_filter_by_me #{event[:msg]}
          td.ajax_filter_by_me #{event[:username]}
          td.ajax_filter_by_me #{ConstantsTranslator.new(event[:l_id]).t}
          td.ajax_filter_by_me.small_content #{event[:lvl]}
          td.ajax_filter_by_me #{event[:b_id]}
          - m_id = event[:m_id] ? "\\#{event[:m_id]}\\" : ""
          td.ajax_filter_by_me.number #{m_id}
          td.ajax_filter_by_me #{event[:i_id]}
          - o_id = event[:o_id] ? "##{event[:o_id]}#" : ""
          td.ajax_filter_by_me.number #{o_id}
          - p_id = event[:p_id] ? "*#{event[:p_id]}*" : ""
          td.ajax_filter_by_me.number #{p_id}
